// This file is auto-generated by @hey-api/openapi-ts

export type ObjectId = string;

/**
 * 用户持有的优惠券实例
 */
export type CouponIns = {
    uuid: string;
    /**
     * 对应Coupon.id
     */
    couponId?: string;
    /**
     * Coupon.name
     */
    name?: string;
    /**
     * 0=未使用，1=已使用
     */
    status?: number;
    /**
     * 适用商品类，对应ProductCate.id，为空时适用所有商品类
     */
    cateId?: string;
    /**
     * 抵扣金额，与对应Coupon.dePrice对应。单位为分
     */
    dePrice?: number;
    /**
     * Coupon.validity
     */
    validity?: string;
};

/**
 * 上次定时达配送信息
 */
export type DeliveryInfo = {
    school?: string;
    /**
     * 绑定到具体订单实例的已选地址
     */
    address?: string;
    /**
     * 绑定到具体订单实例的已选时间，可以是当天也可以是第二天。
     */
    time?: string;
    /**
     * 电话号码，第一次要求用户填写，提交订单后自动存到User.number，之后前端自动从这里取
     */
    number?: string;
};

export type PhoneInfo = {
    phoneNumber?: string;
    purePhoneNumber?: string;
    countryCode?: string;
    watermark?: WaterMark;
};

/**
 * 用户兑换过的积分商品列表
 */
export type PointsProductIns = {
    uuid: string;
    /**
     * 对应User.id
     */
    userId?: string;
    /**
     * 对应PointsProduct.id
     */
    pointsProductId?: string;
    /**
     * PointsProduct.name
     */
    name?: string;
    /**
     * 领取方式，0为自提，1为填信息邮递
     */
    sendType?: number;
    /**
     * 号码
     */
    number?: string;
    /**
     * 邮递人地址
     */
    sendAddr?: string;
    /**
     * 自提时间
     */
    getDate?: string;
    /**
     * 是否已领取，0为未领取，1为已领取
     */
    received?: number;
};

export type User = {
    id?: ObjectId;
    openid?: string;
    sessionKey?: string;
    name?: string;
    /**
     * 学生认证后设为True
     */
    studentCert?: boolean;
    /**
     * 学生认证结果
     */
    school?: string;
    /**
     * 总消费金额
     */
    expend?: number;
    /**
     * 下单次数
     */
    orderNum?: number;
    /**
     * 持有积分
     */
    points?: number;
    /**
     * 电话号码
     */
    number?: string;
    deliveryInfo?: DeliveryInfo;
    /**
     * 用户持有的优惠券实例
     */
    coupons?: Array<CouponIns>;
    /**
     * 用户兑换过的积分商品列表
     */
    pointsProducts?: Array<PointsProductIns>;
    createdAt?: string;
    hashedPassword?: string;
    role?: string;
    jwt?: string;
    phoneInfo?: PhoneInfo;
};

export type WaterMark = {
    timestamp?: number;
    appid?: string;
};

export type ProductCate = {
    id?: ObjectId;
    title?: string;
    /**
     * status=0为下架，后端不返回给前端
     */
    status?: number;
    /**
     * 优先级，便于设置显示顺序，已自动排序
     */
    priority?: number;
    /**
     * 对于delete=1的，后端不返回
     */
    delete?: number;
};

/**
 * 加购商品的可选项, key=ProductOption.id
 */
export type OptionValue = {
    uuid: string;
    /**
     * 加购商品的可选项的可选值，如对于"规格"，value可以为"中杯"
     */
    value?: string;
    /**
     * 该可选项的价格调整，>=0。单位也为分。
     */
    priceAdjustment?: number;
};

export type Product = {
    id?: ObjectId;
    cateId: ObjectId;
    name?: string;
    /**
     * 菜单详情图
     */
    imgURL?: string;
    /**
     * 菜单首页缩略图
     */
    imgURL_small?: string;
    /**
     * 基础价格，单位为分
     */
    price?: number;
    /**
     * 学生优惠价。若用户为已认证学生，展示基础价格，然后划掉，再展示学生优惠价。若未认证则正常展示基础价格。单位为分。
     */
    stuPrice?: number;
    /**
     * 详情页描述
     */
    describe?: string;
    /**
     * 菜单列表中，name下面展示的简介
     */
    short_desc?: string;
    /**
     * status=0为下架，后端不返回给前端
     */
    status?: number;
    /**
     * 对于delete=1的，后端不返回
     */
    delete?: number;
    /**
     * 加购商品的可选项, key=ProductOption.id
     */
    productOptions?: {
        [key: string]: Array<OptionValue>;
    };
    /**
     * 是否需要库存管理/限制购买，前端判断为True时限购一单
     */
    needStockWithRestrictBuy?: boolean;
    /**
     * 库存数量，为0时前端提示已售罄并不可下单
     */
    stock?: number;
    /**
     * 预售买数量，补货后清零
     */
    presaleNum?: number;
    /**
     * 当天是否已补货，0点设为False
     */
    stocked?: boolean;
    /**
     * 是否只限堂食，为true时定时达页面不显示该商品
     */
    onlyDining?: boolean;
    /**
     * 是否只限定时达，为true时堂食页面不显示该商品
     */
    onlyDelivery?: boolean;
    /**
     * 是否不能用优惠券，为true时不能用
     */
    no_coupon?: boolean;
    /**
     * rank 越大越靠前；允许为 null
     */
    rank?: number;
};

export type ProductOption = {
    id?: ObjectId;
    /**
     * 商品的可选项名称，如"规格"
     */
    name?: string;
    /**
     * 对于一个可选项，所有的可能选值，商铺管理用
     */
    values?: Array<OptionValue>;
};

export type PointsProduct = {
    id?: ObjectId;
    name?: string;
    imgURL?: string;
    /**
     * 所需积分
     */
    costPoints?: number;
    /**
     * 描述
     */
    describe?: string;
    /**
     * status=0为下架，后端不返回给前端
     */
    status?: number;
    /**
     * 对于delete=1的，后端不返回
     */
    delete?: number;
    /**
     * 已兑换数量
     */
    redeemedNum?: number;
};

export type FixDeliveryInfo = {
    id?: ObjectId;
    /**
     * 对应User学生认证后的学校
     */
    school?: string;
    /**
     * 旧时间
     */
    times?: Array<(string)>;
    /**
     * 今日时间
     */
    times_today?: Array<(string)>;
    /**
     * 明日时间
     */
    times_tomor?: Array<(string)>;
    /**
     * 工作日可选时间
     */
    times_work?: Array<(string)>;
    /**
     * 周末可选时间
     */
    times_weekend?: Array<(string)>;
    /**
     * 可选地址
     */
    addresses?: Array<(string)>;
};

export type Coupon = {
    id?: ObjectId;
    /**
     * 适用商品类，对应ProductCate.id，为空时适用所有商品类
     */
    cateId?: string;
    /**
     * 名称
     */
    name?: string;
    /**
     * 类型，可选："新客"，"兑换"，"活动"，"学生"，"临时"
     */
    type?: string;
    /**
     * 说明
     */
    description?: string;
    /**
     * 抵扣金额。单位为分。
     */
    dePrice?: number;
    /**
     * 0：下线，1：上线。对于status=0的，不再允许发放、兑换
     */
    status?: number;
    /**
     * 是否可用积分兑换
     */
    convertible?: boolean;
    /**
     * 消耗积分
     */
    costPoints?: number;
    /**
     * 截至有效期
     */
    validity?: string;
    /**
     * 发放数量
     */
    issueNum?: number;
    /**
     * 使用数量
     */
    useNum?: number;
    /**
     * 伪删除，为1时后端不返回
     */
    delete?: number;
};

/**
 * 配置document，给一些变化频繁的配置用
 */
export type AppConfiguration = {
    id: ObjectId;
    /**
     * 配置项的键名，例如 "api.url"
     */
    key: string;
    /**
     * 配置项的值，例如 "https://api.example.com"
     */
    value: string;
    /**
     * 配置项的描述
     */
    description?: string;
    /**
     * 配置类别（用于分组管理）
     */
    category?: string;
};

export type Inventory = {
    id?: ObjectId;
    name?: string;
    type?: string;
    deleted?: boolean;
    unit?: string;
    remain?: number;
};

export type Activity = {
    id?: ObjectId;
    /**
     * 活动名
     */
    title?: string;
    /**
     * 首页/我的，竖样式活动图片URL
     */
    imgURL?: string;
    /**
     * 菜单，横样式活动图片URL
     */
    imgURL_menu?: string;
    /**
     * 活动介绍
     */
    describe?: string;
    /**
     * 活动开始时间
     */
    startTime?: string;
    /**
     * 活动结束时间，到时自动下架
     */
    endTime?: string;
    /**
     * 0为下架，1为上架。=0时不返回给小程序
     */
    status?: number;
    /**
     * 伪删除，=1时后端不返回
     */
    delete?: number;
};

export type ProcessorMap = {
    id?: ObjectId;
    state?: string;
    event?: string;
    customerTypes?: Array<(string)>;
    scenes?: Array<(string)>;
    processorIds?: Array<(number)>;
};

export type OrderApiParams = {
    userId: ObjectId;
    /**
     * 顾客类型，可选："北大学生业务"，"清华学生业务"，"未学生认证业务"
     */
    customerType: string;
    /**
     * 场景，可选："堂食"，"外带"，"定时达"
     */
    scene: string;
    deliveryInfo?: DeliveryInfo;
    /**
     * 订单所含商品列表
     */
    items: Array<OrderItemApiParams>;
    /**
     * 顾客备注
     */
    remark?: string;
    /**
     * 商家备注
     */
    merchantNote?: string;
    /**
     * 只给商品端使用的，线下优惠，小程序端传了也不处理。
     */
    disPrice?: number;
    /**
     * 本订单使用的优惠券uuid，可为空
     */
    couponInsUUID?: string;
};

/**
 * 订单其中的一个商品
 */
export type OrderItemApiParams = {
    productId: ObjectId;
    /**
     * 商品选项，key为ProductOption.id, value为OptionValue.uuid
     */
    optionValues?: {
        [key: string]: (string);
    };
};

export type ResponseBodyDTOServiceResultObjectObject = {
    msg?: string;
    data?: ServiceResultObjectObject;
};

export type ServiceResultObjectObject = {
    data?: {
        [key: string]: unknown;
    };
    context?: {
        [key: string]: unknown;
    };
    msg?: string;
    success?: boolean;
};

export type RefundApplyApiParams = {
    orderId: string;
    /**
     * 退款原因
     */
    reason: string;
};

export type BatchSupplyOrderDTO = {
    orderIds?: Array<(string)>;
};

export type GetPhoneNumberByCodeApiParams = {
    code: string;
};

export type WxGetPhoneNumberResponseDTO = {
    errcode?: number;
    errmsg?: string;
    phone_info?: PhoneInfo;
};

export type CheckStudentIdentityApiParams = {
    wx_student_check_code: string;
};

export type WxStudentCheckDTO = {
    errcode?: number;
    errmsg?: string;
    bind_status?: number;
    is_student?: boolean;
};

export type LoginDTO = {
    username: string;
    password: string;
};

export type ResponseBodyDTOUserDTO = {
    msg?: string;
    data?: UserDTO;
};

export type UserDTO = {
    id: string;
    openid?: string;
    name?: string;
    studentCert?: boolean;
    school?: string;
    role?: string;
    number?: string;
    points?: number;
    coupons?: Array<CouponIns>;
    pointsProducts?: Array<PointsProductIns>;
    deliveryInfo?: DeliveryInfo;
};

export type AppConfigurationApiParams = {
    /**
     * 配置项的键名，例如 "api.url"
     */
    key: string;
    /**
     * 配置项的值，例如 "https://api.example.com"
     */
    value: string;
    /**
     * 配置项的描述
     */
    description?: string;
    /**
     * 配置类别（用于分组管理）
     */
    category?: string;
};

export type TimePeriodRequest = {
    startTime?: string;
    endTime?: string;
};

export type InboundRequest = {
    inventoryId?: string;
    amount?: number;
};

export type CheckInventoryRequest = {
    inventoryId?: string;
    checkedAmount?: number;
};

/**
 * 就是订单呀
 */
export type Order = {
    id: ObjectId;
    userId: ObjectId;
    /**
     * 自动填充状态
     */
    state?: string;
    /**
     * 顾客类型，可选："北大学生业务"，"清华学生业务"，"未学生认证业务"
     */
    customerType: string;
    /**
     * 场景，可选："堂食"，"外带"，"定时达"
     */
    scene: string;
    deliveryInfo?: DeliveryInfo;
    /**
     * 订单所含商品列表
     */
    items: Array<OrderItem>;
    /**
     * 自动填充订单号
     */
    orderNum?: number;
    /**
     * 顾客备注
     */
    remark?: string;
    /**
     * 商家备注
     */
    merchantNote?: string;
    /**
     * 后端根据sum(OrderItem.price)-coupon.dePrice计算，单位为分。
     */
    totalPrice: number;
    coupon?: CouponIns;
    /**
     * 只给商品端使用的，线下优惠，小程序端传了也不处理。
     */
    disPrice?: number;
    /**
     * 本单获取积分数目
     */
    points?: number;
    /**
     * 自动填充创建时间
     */
    createdAt?: string;
    /**
     * 退款原因
     */
    refundReason?: string;
    /**
     * 异常结束原因
     */
    abNormalEndReason?: string;
};

/**
 * 订单其中的一个商品
 */
export type OrderItem = {
    productId?: ObjectId;
    /**
     * 商品选项，key为ProductOption.id, value为一个完整的OptionValue
     */
    optionValues?: {
        [key: string]: OptionValue;
    };
    /**
     * Product.name
     */
    name?: string;
    cateId?: ObjectId;
    /**
     * 根据Product.price和目前optionValues中OptionValue.priceAdjustment计算的价格。单位为分
     */
    price?: number;
    /**
     * Product.imgURL_small
     */
    imgURL_small?: string;
};

export type GetAllUsersResponse = (Array<User>);

export type GetAllUsersError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type UpdateUserData = {
    body: User;
};

export type UpdateUserResponse = (User);

export type UpdateUserError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type CreateUserData = {
    body: User;
};

export type CreateUserResponse = (User);

export type CreateUserError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetAllProductCatesResponse = (Array<ProductCate>);

export type GetAllProductCatesError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type UpdateProductCateData = {
    body: ProductCate;
};

export type UpdateProductCateResponse = (ProductCate);

export type UpdateProductCateError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type CreateProductCateData = {
    body: ProductCate;
};

export type CreateProductCateResponse = (ProductCate);

export type CreateProductCateError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetAllProductsResponse = (Array<Product>);

export type GetAllProductsError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type UpdateProductData = {
    body: Product;
};

export type UpdateProductResponse = (Product);

export type UpdateProductError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type CreateProductData = {
    body: Product;
};

export type CreateProductResponse = (Product);

export type CreateProductError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetAllProductOptionsResponse = (Array<ProductOption>);

export type GetAllProductOptionsError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type UpdateProductOptionData = {
    body: ProductOption;
};

export type UpdateProductOptionResponse = (ProductOption);

export type UpdateProductOptionError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type CreateProductOptionData = {
    body: ProductOption;
};

export type CreateProductOptionResponse = (ProductOption);

export type CreateProductOptionError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetAllPointsProductsResponse = (Array<PointsProduct>);

export type GetAllPointsProductsError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type UpdatePointsProductData = {
    body: PointsProduct;
};

export type UpdatePointsProductResponse = (PointsProduct);

export type UpdatePointsProductError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type CreatePointsProductData = {
    body: PointsProduct;
};

export type CreatePointsProductResponse = (PointsProduct);

export type CreatePointsProductError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetAllFixDeliveryInfosResponse = (Array<FixDeliveryInfo>);

export type GetAllFixDeliveryInfosError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type UpdateFixDeliveryInfoData = {
    body: FixDeliveryInfo;
};

export type UpdateFixDeliveryInfoResponse = (FixDeliveryInfo);

export type UpdateFixDeliveryInfoError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type CreateFixDeliveryInfoData = {
    body: FixDeliveryInfo;
};

export type CreateFixDeliveryInfoResponse = (FixDeliveryInfo);

export type CreateFixDeliveryInfoError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetAllCouponsResponse = (Array<Coupon>);

export type GetAllCouponsError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type UpdateCouponData = {
    body: Coupon;
};

export type UpdateCouponResponse = (Coupon);

export type UpdateCouponError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type CreateCouponData = {
    body: Coupon;
};

export type CreateCouponResponse = (Coupon);

export type CreateCouponError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetAllAppConfigurationsResponse = (Array<AppConfiguration>);

export type GetAllAppConfigurationsError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type UpdateConfigurationData = {
    body: AppConfiguration;
};

export type UpdateConfigurationResponse = (AppConfiguration);

export type UpdateConfigurationError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type AddConfigurationData = {
    body: AppConfigurationApiParams;
};

export type AddConfigurationResponse = (AppConfiguration);

export type AddConfigurationError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type UpdateInventoryData = {
    body: Inventory;
    query: {
        id: string;
    };
};

export type UpdateInventoryResponse = ({
    [key: string]: unknown;
});

export type UpdateInventoryError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetAllActivitiesResponse = (Array<Activity>);

export type GetAllActivitiesError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type UpdateActivityData = {
    body: Activity;
};

export type UpdateActivityResponse = (Activity);

export type UpdateActivityError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type CreateEntityData = {
    body: Activity;
};

export type CreateEntityResponse = (Activity);

export type CreateEntityError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type UploadImageData = {
    body?: {
        image: (Blob | File);
    };
};

export type UploadImageResponse = (string);

export type UploadImageError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type ReplenishProductData = {
    query: {
        productId: string;
        replenishQuantity: number;
    };
};

export type ReplenishProductResponse = (string);

export type ReplenishProductError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetAllProcessorMapsResponse = (Array<ProcessorMap>);

export type GetAllProcessorMapsError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type CreateProcessorMapData = {
    body: ProcessorMap;
};

export type CreateProcessorMapResponse = (ProcessorMap);

export type CreateProcessorMapError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type UploadImagePointsProductData = {
    body?: {
        image: (Blob | File);
    };
};

export type UploadImagePointsProductResponse = (string);

export type UploadImagePointsProductError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type RedeemPointsProductData = {
    query: {
        getDate?: string;
        name: string;
        number: string;
        productId: string;
        sendAddr?: string;
        sendType: number;
        userId: string;
    };
};

export type RedeemPointsProductResponse = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type RedeemPointsProductError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type SetPointsProductAsReceivedData = {
    query: {
        userId: string;
        uuid: string;
    };
};

export type SetPointsProductAsReceivedResponse = (string);

export type SetPointsProductAsReceivedError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type ExchangeCouponData = {
    query: {
        couponId: string;
        userId: string;
    };
};

export type ExchangeCouponResponse = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type ExchangeCouponError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type CallbackData = {
    body: string;
};

export type CallbackResponse = (string);

export type CallbackError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type CreateData = {
    body: OrderApiParams;
};

export type CreateResponse = ({
    [key: string]: unknown;
});

export type CreateError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type SupplyOrderData = {
    query: {
        orderId: string;
    };
};

export type SupplyOrderResponse = (ResponseBodyDTOServiceResultObjectObject);

export type SupplyOrderError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type RefundCallbackData = {
    body: string;
};

export type RefundCallbackResponse = (string);

export type RefundCallbackError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type RefundApplyData = {
    body: RefundApplyApiParams;
};

export type RefundApplyResponse = (ResponseBodyDTOServiceResultObjectObject);

export type RefundApplyError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type CreateOrderInStoreData = {
    body: OrderApiParams;
};

export type CreateOrderInStoreResponse = (ServiceResultObjectObject);

export type CreateOrderInStoreError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type BatchSupplyOrdersData = {
    body: BatchSupplyOrderDTO;
};

export type BatchSupplyOrdersResponse = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type BatchSupplyOrdersError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type DistributeCouponToStudentsData = {
    query: {
        couponId: string;
    };
};

export type DistributeCouponToStudentsResponse = ({
    [key: string]: unknown;
});

export type DistributeCouponToStudentsError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type AddCouponToUserData = {
    query: {
        couponId: string;
        userId: string;
    };
};

export type AddCouponToUserResponse = ({
    [key: string]: unknown;
});

export type AddCouponToUserError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetPhoneNumberData = {
    body: GetPhoneNumberByCodeApiParams;
};

export type GetPhoneNumberResponse = (WxGetPhoneNumberResponseDTO);

export type GetPhoneNumberError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type CheckStudentIdentityData = {
    body: CheckStudentIdentityApiParams;
};

export type CheckStudentIdentityResponse = (WxStudentCheckDTO);

export type CheckStudentIdentityError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type LoginData = {
    body: LoginDTO;
};

export type LoginResponse = (ResponseBodyDTOUserDTO);

export type LoginError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetInventoryRecordsByTimePeriodData = {
    body: TimePeriodRequest;
};

export type GetInventoryRecordsByTimePeriodResponse = ({
    [key: string]: unknown;
});

export type GetInventoryRecordsByTimePeriodError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type InboundData = {
    body: InboundRequest;
};

export type InboundResponse = ({
    [key: string]: unknown;
});

export type InboundError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type CreateInventoryData = {
    body: Inventory;
};

export type CreateInventoryResponse = ({
    [key: string]: unknown;
});

export type CreateInventoryError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type CheckInventoryData = {
    body: CheckInventoryRequest;
};

export type CheckInventoryResponse = ({
    [key: string]: unknown;
});

export type CheckInventoryError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type UploadImage1Data = {
    body?: {
        image: (Blob | File);
    };
};

export type UploadImage1Response = (string);

export type UploadImage1Error = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetUserByNameData = {
    path: {
        name: string;
    };
};

export type GetUserByNameResponse = (User);

export type GetUserByNameError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetNewUsersData = {
    query: {
        endTime: string;
        startTime: string;
    };
};

export type GetNewUsersResponse = (Array<User>);

export type GetNewUsersError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetUserDtoByIdData = {
    path: {
        id: string;
    };
};

export type GetUserDtoByIdResponse = (UserDTO);

export type GetUserDtoByIdError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetAllProductCatesShopResponse = (Array<ProductCate>);

export type GetAllProductCatesShopError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetAllProductsShopResponse = (Array<Product>);

export type GetAllProductsShopError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type ExistsByCateIdData = {
    query: {
        cateId: string;
    };
};

export type ExistsByCateIdResponse = (boolean);

export type ExistsByCateIdError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetAllPointsProductsShopResponse = (Array<PointsProduct>);

export type GetAllPointsProductsShopError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetAllPointsProductInsResponse = (Array<PointsProductIns>);

export type GetAllPointsProductInsError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetAllOrdersData = {
    query: {
        endTime: string;
        startTime: string;
    };
};

export type GetAllOrdersResponse = ({
    [key: string]: unknown;
});

export type GetAllOrdersError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetOrdersByUserIdData = {
    path: {
        userId: string;
    };
    query?: {
        all?: boolean;
        newest?: boolean;
    };
};

export type GetOrdersByUserIdResponse = (Array<Order>);

export type GetOrdersByUserIdError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetOrdersByDeliveryInfoData = {
    query: {
        address: string;
        school: string;
        time: string;
    };
};

export type GetOrdersByDeliveryInfoResponse = ({
    [key: string]: unknown;
});

export type GetOrdersByDeliveryInfoError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetOrderByIdData = {
    query: {
        orderId: string;
    };
};

export type GetOrderByIdResponse = ({
    [key: string]: unknown;
});

export type GetOrderByIdError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetAllCouponsForPointsResponse = (Array<Coupon>);

export type GetAllCouponsForPointsError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetCouponInsOfAuserResponse = (Array<CouponIns>);

export type GetCouponInsOfAuserError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type WxLoginOrRegisterData = {
    query: {
        code: string;
    };
};

export type WxLoginOrRegisterResponse = (ResponseBodyDTOUserDTO);

export type WxLoginOrRegisterError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type ValidateResponse = (ResponseBodyDTOUserDTO);

export type ValidateError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetTimeToStopOrderingResponse = (string);

export type GetTimeToStopOrderingError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetOpeningTimeResponse = (string);

export type GetOpeningTimeError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetOperationRecordsData = {
    path: {
        id: string;
    };
};

export type GetOperationRecordsResponse = ({
    [key: string]: unknown;
});

export type GetOperationRecordsError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetAllInventoriesResponse = ({
    [key: string]: unknown;
});

export type GetAllInventoriesError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type GetAllActivitiesShopResponse = (Array<Activity>);

export type GetAllActivitiesShopError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type DeleteProductOptionData = {
    path: {
        id: string;
    };
};

export type DeleteProductOptionResponse = (string);

export type DeleteProductOptionError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type DeleteFixDeliveryInfoData = {
    path: {
        id: string;
    };
};

export type DeleteFixDeliveryInfoResponse = (unknown);

export type DeleteFixDeliveryInfoError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});

export type DeleteConfigurationData = {
    path: {
        id: string;
    };
};

export type DeleteConfigurationResponse = (unknown);

export type DeleteConfigurationError = ({
    [key: string]: {
        [key: string]: unknown;
    };
});