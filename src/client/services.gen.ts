// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options, formDataBodySerializer } from '@hey-api/client-fetch';
import type { GetAllUsersError, GetAllUsersResponse, UpdateUserData, UpdateUserError, UpdateUserResponse, CreateUserData, CreateUserError, CreateUserResponse, GetAllProductCatesError, GetAllProductCatesResponse, UpdateProductCateData, UpdateProductCateError, UpdateProductCateResponse, CreateProductCateData, CreateProductCateError, CreateProductCateResponse, GetAllProductsError, GetAllProductsResponse, UpdateProductData, UpdateProductError, UpdateProductResponse, CreateProductData, CreateProductError, CreateProductResponse, GetAllProductOptionsError, GetAllProductOptionsResponse, UpdateProductOptionData, UpdateProductOptionError, UpdateProductOptionResponse, CreateProductOptionData, CreateProductOptionError, CreateProductOptionResponse, GetAllPointsProductsError, GetAllPointsProductsResponse, UpdatePointsProductData, UpdatePointsProductError, UpdatePointsProductResponse, CreatePointsProductData, CreatePointsProductError, CreatePointsProductResponse, GetAllFixDeliveryInfosError, GetAllFixDeliveryInfosResponse, UpdateFixDeliveryInfoData, UpdateFixDeliveryInfoError, UpdateFixDeliveryInfoResponse, CreateFixDeliveryInfoData, CreateFixDeliveryInfoError, CreateFixDeliveryInfoResponse, GetAllCouponsError, GetAllCouponsResponse, UpdateCouponData, UpdateCouponError, UpdateCouponResponse, CreateCouponData, CreateCouponError, CreateCouponResponse, GetAllAppConfigurationsError, GetAllAppConfigurationsResponse, UpdateConfigurationData, UpdateConfigurationError, UpdateConfigurationResponse, AddConfigurationData, AddConfigurationError, AddConfigurationResponse, GetAllActivitiesError, GetAllActivitiesResponse, UpdateActivityData, UpdateActivityError, UpdateActivityResponse, CreateEntityData, CreateEntityError, CreateEntityResponse, UploadImageData, UploadImageError, UploadImageResponse, GetAllProcessorMapsError, GetAllProcessorMapsResponse, CreateProcessorMapData, CreateProcessorMapError, CreateProcessorMapResponse, UploadImagePointsProductData, UploadImagePointsProductError, UploadImagePointsProductResponse, RedeemPointsProductData, RedeemPointsProductError, RedeemPointsProductResponse, SetPointsProductAsReceivedData, SetPointsProductAsReceivedError, SetPointsProductAsReceivedResponse, ExchangeCouponData, ExchangeCouponError, ExchangeCouponResponse, CallbackData, CallbackError, CallbackResponse, CreateData, CreateError, CreateResponse, SupplyOrderData, SupplyOrderError, SupplyOrderResponse, RefundOrderData, RefundOrderError, RefundOrderResponse, CreateOrderInStoreData, CreateOrderInStoreError, CreateOrderInStoreResponse, AddCouponToUserData, AddCouponToUserError, AddCouponToUserResponse, CheckStudentIdentityData, CheckStudentIdentityError, CheckStudentIdentityResponse, LoginData, LoginError, LoginResponse, UploadImage1Data, UploadImage1Error, UploadImage1Response, GetUserByNameData, GetUserByNameError, GetUserByNameResponse, GetNewUsersData, GetNewUsersError, GetNewUsersResponse, GetAllProductCatesShopError, GetAllProductCatesShopResponse, GetAllProductsShopError, GetAllProductsShopResponse, ExistsByCateIdData, ExistsByCateIdError, ExistsByCateIdResponse, GetAllPointsProductsShopError, GetAllPointsProductsShopResponse, GetAllPointsProductInsError, GetAllPointsProductInsResponse, GetAllOrdersData, GetAllOrdersError, GetAllOrdersResponse, GetOrdersByUserIdData, GetOrdersByUserIdError, GetOrdersByUserIdResponse, GetAllCouponsForPointsError, GetAllCouponsForPointsResponse, WxLoginOrRegisterData, WxLoginOrRegisterError, WxLoginOrRegisterResponse, ValidateError, ValidateResponse, GetAllActivitiesShopError, GetAllActivitiesShopResponse, DeleteFixDeliveryInfoData, DeleteFixDeliveryInfoError, DeleteFixDeliveryInfoResponse, DeleteConfigurationData, DeleteConfigurationError, DeleteConfigurationResponse } from './types.gen';

export const client = createClient(createConfig());

export const getAllUsers = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetAllUsersResponse, GetAllUsersError, ThrowOnError>({
    ...options,
    url: '/user'
}); };

export const updateUser = <ThrowOnError extends boolean = false>(options: Options<UpdateUserData, ThrowOnError>) => { return (options?.client ?? client).put<UpdateUserResponse, UpdateUserError, ThrowOnError>({
    ...options,
    url: '/user'
}); };

export const createUser = <ThrowOnError extends boolean = false>(options: Options<CreateUserData, ThrowOnError>) => { return (options?.client ?? client).post<CreateUserResponse, CreateUserError, ThrowOnError>({
    ...options,
    url: '/user'
}); };

/**
 * 获得所有ProductCates，用于菜单侧边栏分类
 */
export const getAllProductCates = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetAllProductCatesResponse, GetAllProductCatesError, ThrowOnError>({
    ...options,
    url: '/product_cates'
}); };

export const updateProductCate = <ThrowOnError extends boolean = false>(options: Options<UpdateProductCateData, ThrowOnError>) => { return (options?.client ?? client).put<UpdateProductCateResponse, UpdateProductCateError, ThrowOnError>({
    ...options,
    url: '/product_cates'
}); };

export const createProductCate = <ThrowOnError extends boolean = false>(options: Options<CreateProductCateData, ThrowOnError>) => { return (options?.client ?? client).post<CreateProductCateResponse, CreateProductCateError, ThrowOnError>({
    ...options,
    url: '/product_cates'
}); };

/**
 * 获得所有Products，用于菜单展示
 */
export const getAllProducts = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetAllProductsResponse, GetAllProductsError, ThrowOnError>({
    ...options,
    url: '/product'
}); };

export const updateProduct = <ThrowOnError extends boolean = false>(options: Options<UpdateProductData, ThrowOnError>) => { return (options?.client ?? client).put<UpdateProductResponse, UpdateProductError, ThrowOnError>({
    ...options,
    url: '/product'
}); };

export const createProduct = <ThrowOnError extends boolean = false>(options: Options<CreateProductData, ThrowOnError>) => { return (options?.client ?? client).post<CreateProductResponse, CreateProductError, ThrowOnError>({
    ...options,
    url: '/product'
}); };

/**
 * 获得所有ProductOptions，用于选择商品具体选项，如：“规格”，“温度”
 */
export const getAllProductOptions = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetAllProductOptionsResponse, GetAllProductOptionsError, ThrowOnError>({
    ...options,
    url: '/productOption'
}); };

export const updateProductOption = <ThrowOnError extends boolean = false>(options: Options<UpdateProductOptionData, ThrowOnError>) => { return (options?.client ?? client).put<UpdateProductOptionResponse, UpdateProductOptionError, ThrowOnError>({
    ...options,
    url: '/productOption'
}); };

export const createProductOption = <ThrowOnError extends boolean = false>(options: Options<CreateProductOptionData, ThrowOnError>) => { return (options?.client ?? client).post<CreateProductOptionResponse, CreateProductOptionError, ThrowOnError>({
    ...options,
    url: '/productOption'
}); };

/**
 * 获取积分兑换商品
 */
export const getAllPointsProducts = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetAllPointsProductsResponse, GetAllPointsProductsError, ThrowOnError>({
    ...options,
    url: '/points'
}); };

export const updatePointsProduct = <ThrowOnError extends boolean = false>(options: Options<UpdatePointsProductData, ThrowOnError>) => { return (options?.client ?? client).put<UpdatePointsProductResponse, UpdatePointsProductError, ThrowOnError>({
    ...options,
    url: '/points'
}); };

export const createPointsProduct = <ThrowOnError extends boolean = false>(options: Options<CreatePointsProductData, ThrowOnError>) => { return (options?.client ?? client).post<CreatePointsProductResponse, CreatePointsProductError, ThrowOnError>({
    ...options,
    url: '/points'
}); };

/**
 * 获取所有定时达信息，用于定时达下单
 */
export const getAllFixDeliveryInfos = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetAllFixDeliveryInfosResponse, GetAllFixDeliveryInfosError, ThrowOnError>({
    ...options,
    url: '/fixDeliveryInfo'
}); };

export const updateFixDeliveryInfo = <ThrowOnError extends boolean = false>(options: Options<UpdateFixDeliveryInfoData, ThrowOnError>) => { return (options?.client ?? client).put<UpdateFixDeliveryInfoResponse, UpdateFixDeliveryInfoError, ThrowOnError>({
    ...options,
    url: '/fixDeliveryInfo'
}); };

export const createFixDeliveryInfo = <ThrowOnError extends boolean = false>(options: Options<CreateFixDeliveryInfoData, ThrowOnError>) => { return (options?.client ?? client).post<CreateFixDeliveryInfoResponse, CreateFixDeliveryInfoError, ThrowOnError>({
    ...options,
    url: '/fixDeliveryInfo'
}); };

export const getAllCoupons = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetAllCouponsResponse, GetAllCouponsError, ThrowOnError>({
    ...options,
    url: '/coupon'
}); };

export const updateCoupon = <ThrowOnError extends boolean = false>(options: Options<UpdateCouponData, ThrowOnError>) => { return (options?.client ?? client).put<UpdateCouponResponse, UpdateCouponError, ThrowOnError>({
    ...options,
    url: '/coupon'
}); };

export const createCoupon = <ThrowOnError extends boolean = false>(options: Options<CreateCouponData, ThrowOnError>) => { return (options?.client ?? client).post<CreateCouponResponse, CreateCouponError, ThrowOnError>({
    ...options,
    url: '/coupon'
}); };

/**
 * 获取所有配置
 */
export const getAllAppConfigurations = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetAllAppConfigurationsResponse, GetAllAppConfigurationsError, ThrowOnError>({
    ...options,
    url: '/appConfiguration'
}); };

/**
 * 对单个做修改
 */
export const updateConfiguration = <ThrowOnError extends boolean = false>(options: Options<UpdateConfigurationData, ThrowOnError>) => { return (options?.client ?? client).put<UpdateConfigurationResponse, UpdateConfigurationError, ThrowOnError>({
    ...options,
    url: '/appConfiguration'
}); };

/**
 * 新增一个
 */
export const addConfiguration = <ThrowOnError extends boolean = false>(options: Options<AddConfigurationData, ThrowOnError>) => { return (options?.client ?? client).post<AddConfigurationResponse, AddConfigurationError, ThrowOnError>({
    ...options,
    url: '/appConfiguration'
}); };

/**
 * 获取所有小程序展示活动
 */
export const getAllActivities = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetAllActivitiesResponse, GetAllActivitiesError, ThrowOnError>({
    ...options,
    url: '/activity'
}); };

export const updateActivity = <ThrowOnError extends boolean = false>(options: Options<UpdateActivityData, ThrowOnError>) => { return (options?.client ?? client).put<UpdateActivityResponse, UpdateActivityError, ThrowOnError>({
    ...options,
    url: '/activity'
}); };

export const createEntity = <ThrowOnError extends boolean = false>(options: Options<CreateEntityData, ThrowOnError>) => { return (options?.client ?? client).post<CreateEntityResponse, CreateEntityError, ThrowOnError>({
    ...options,
    url: '/activity'
}); };

export const uploadImage = <ThrowOnError extends boolean = false>(options?: Options<UploadImageData, ThrowOnError>) => { return (options?.client ?? client).post<UploadImageResponse, UploadImageError, ThrowOnError>({
    ...options,
    ...formDataBodySerializer,
    headers: {
        'Content-Type': null
    },
    url: '/product/uploadImage'
}); };

export const getAllProcessorMaps = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetAllProcessorMapsResponse, GetAllProcessorMapsError, ThrowOnError>({
    ...options,
    url: '/processorMap'
}); };

export const createProcessorMap = <ThrowOnError extends boolean = false>(options: Options<CreateProcessorMapData, ThrowOnError>) => { return (options?.client ?? client).post<CreateProcessorMapResponse, CreateProcessorMapError, ThrowOnError>({
    ...options,
    url: '/processorMap'
}); };

export const uploadImagePointsProduct = <ThrowOnError extends boolean = false>(options?: Options<UploadImagePointsProductData, ThrowOnError>) => { return (options?.client ?? client).post<UploadImagePointsProductResponse, UploadImagePointsProductError, ThrowOnError>({
    ...options,
    ...formDataBodySerializer,
    headers: {
        'Content-Type': null
    },
    url: '/points/uploadImage'
}); };

/**
 * 使用积分兑换积分商品
 */
export const redeemPointsProduct = <ThrowOnError extends boolean = false>(options: Options<RedeemPointsProductData, ThrowOnError>) => { return (options?.client ?? client).post<RedeemPointsProductResponse, RedeemPointsProductError, ThrowOnError>({
    ...options,
    url: '/points/redeemProduct'
}); };

export const setPointsProductAsReceived = <ThrowOnError extends boolean = false>(options: Options<SetPointsProductAsReceivedData, ThrowOnError>) => { return (options?.client ?? client).post<SetPointsProductAsReceivedResponse, SetPointsProductAsReceivedError, ThrowOnError>({
    ...options,
    url: '/points/receiveProduct'
}); };

/**
 * 积分兑换优惠券接口
 */
export const exchangeCoupon = <ThrowOnError extends boolean = false>(options: Options<ExchangeCouponData, ThrowOnError>) => { return (options?.client ?? client).post<ExchangeCouponResponse, ExchangeCouponError, ThrowOnError>({
    ...options,
    url: '/points/exchangeCoupon'
}); };

/**
 * 接收支付结果通知。是腾讯的微信支付系统调用的
 */
export const callback = <ThrowOnError extends boolean = false>(options: Options<CallbackData, ThrowOnError>) => { return (options?.client ?? client).post<CallbackResponse, CallbackError, ThrowOnError>({
    ...options,
    url: '/order/wxcreate_callback'
}); };

/**
 * 创建预支付订单。小程序先调用这个，再调用wx.requestPayment
 */
export const create = <ThrowOnError extends boolean = false>(options: Options<CreateData, ThrowOnError>) => { return (options?.client ?? client).post<CreateResponse, CreateError, ThrowOnError>({
    ...options,
    url: '/order/wxcreate'
}); };

export const supplyOrder = <ThrowOnError extends boolean = false>(options: Options<SupplyOrderData, ThrowOnError>) => { return (options?.client ?? client).post<SupplyOrderResponse, SupplyOrderError, ThrowOnError>({
    ...options,
    url: '/order/supply'
}); };

export const refundOrder = <ThrowOnError extends boolean = false>(options: Options<RefundOrderData, ThrowOnError>) => { return (options?.client ?? client).post<RefundOrderResponse, RefundOrderError, ThrowOnError>({
    ...options,
    url: '/order/refund'
}); };

/**
 * 用于商铺端创建订单，不走微信支付，微信支付未办理前小程序也可先调用这个
 */
export const createOrderInStore = <ThrowOnError extends boolean = false>(options: Options<CreateOrderInStoreData, ThrowOnError>) => { return (options?.client ?? client).post<CreateOrderInStoreResponse, CreateOrderInStoreError, ThrowOnError>({
    ...options,
    url: '/order/create'
}); };

/**
 * 给某个顾客发金条，商铺端专用
 */
export const addCouponToUser = <ThrowOnError extends boolean = false>(options: Options<AddCouponToUserData, ThrowOnError>) => { return (options?.client ?? client).post<AddCouponToUserResponse, AddCouponToUserError, ThrowOnError>({
    ...options,
    url: '/coupon/add_to_user'
}); };

export const checkStudentIdentity = <ThrowOnError extends boolean = false>(options: Options<CheckStudentIdentityData, ThrowOnError>) => { return (options?.client ?? client).post<CheckStudentIdentityResponse, CheckStudentIdentityError, ThrowOnError>({
    ...options,
    url: '/auth/wx/checkstudentidentity'
}); };

export const login = <ThrowOnError extends boolean = false>(options: Options<LoginData, ThrowOnError>) => { return (options?.client ?? client).post<LoginResponse, LoginError, ThrowOnError>({
    ...options,
    url: '/auth/login'
}); };

export const uploadImage1 = <ThrowOnError extends boolean = false>(options?: Options<UploadImage1Data, ThrowOnError>) => { return (options?.client ?? client).post<UploadImage1Response, UploadImage1Error, ThrowOnError>({
    ...options,
    ...formDataBodySerializer,
    headers: {
        'Content-Type': null
    },
    url: '/activity/uploadImage'
}); };

export const getUserByName = <ThrowOnError extends boolean = false>(options: Options<GetUserByNameData, ThrowOnError>) => { return (options?.client ?? client).get<GetUserByNameResponse, GetUserByNameError, ThrowOnError>({
    ...options,
    url: '/user/{name}'
}); };

export const getNewUsers = <ThrowOnError extends boolean = false>(options: Options<GetNewUsersData, ThrowOnError>) => { return (options?.client ?? client).get<GetNewUsersResponse, GetNewUsersError, ThrowOnError>({
    ...options,
    url: '/user/new'
}); };

export const getAllProductCatesShop = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetAllProductCatesShopResponse, GetAllProductCatesShopError, ThrowOnError>({
    ...options,
    url: '/product_cates/shop'
}); };

export const getAllProductsShop = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetAllProductsShopResponse, GetAllProductsShopError, ThrowOnError>({
    ...options,
    url: '/product/shop'
}); };

export const existsByCateId = <ThrowOnError extends boolean = false>(options: Options<ExistsByCateIdData, ThrowOnError>) => { return (options?.client ?? client).get<ExistsByCateIdResponse, ExistsByCateIdError, ThrowOnError>({
    ...options,
    url: '/product/existsByCateId'
}); };

export const getAllPointsProductsShop = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetAllPointsProductsShopResponse, GetAllPointsProductsShopError, ThrowOnError>({
    ...options,
    url: '/points/shop'
}); };

export const getAllPointsProductIns = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetAllPointsProductInsResponse, GetAllPointsProductInsError, ThrowOnError>({
    ...options,
    url: '/points/pointsProductInsList'
}); };

export const getAllOrders = <ThrowOnError extends boolean = false>(options: Options<GetAllOrdersData, ThrowOnError>) => { return (options?.client ?? client).get<GetAllOrdersResponse, GetAllOrdersError, ThrowOnError>({
    ...options,
    url: '/order'
}); };

/**
 * 根据userId查询Orders，当前端传递all=true时，返回所有，否则默认5条
 */
export const getOrdersByUserId = <ThrowOnError extends boolean = false>(options: Options<GetOrdersByUserIdData, ThrowOnError>) => { return (options?.client ?? client).get<GetOrdersByUserIdResponse, GetOrdersByUserIdError, ThrowOnError>({
    ...options,
    url: '/order/user/{userId}'
}); };

/**
 * 获取积分兑换优惠券列表,在"我的-积分"页面使用
 */
export const getAllCouponsForPoints = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetAllCouponsForPointsResponse, GetAllCouponsForPointsError, ThrowOnError>({
    ...options,
    url: '/coupon/for_points'
}); };

export const wxLoginOrRegister = <ThrowOnError extends boolean = false>(options: Options<WxLoginOrRegisterData, ThrowOnError>) => { return (options?.client ?? client).get<WxLoginOrRegisterResponse, WxLoginOrRegisterError, ThrowOnError>({
    ...options,
    url: '/auth/wx'
}); };

/**
 * 一个纯粹的管理员身份校验，输入请求头中的Authorization，输出响应头中的可能刷新的token，响应体中的用户基本信息
 */
export const validate = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<ValidateResponse, ValidateError, ThrowOnError>({
    ...options,
    url: '/auth/validate'
}); };

export const getAllActivitiesShop = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetAllActivitiesShopResponse, GetAllActivitiesShopError, ThrowOnError>({
    ...options,
    url: '/activity/shop'
}); };

export const deleteFixDeliveryInfo = <ThrowOnError extends boolean = false>(options: Options<DeleteFixDeliveryInfoData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteFixDeliveryInfoResponse, DeleteFixDeliveryInfoError, ThrowOnError>({
    ...options,
    url: '/fixDeliveryInfo/{id}'
}); };

/**
 * 删除一个
 */
export const deleteConfiguration = <ThrowOnError extends boolean = false>(options: Options<DeleteConfigurationData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteConfigurationResponse, DeleteConfigurationError, ThrowOnError>({
    ...options,
    url: '/appConfiguration/{id}'
}); };